System radargui                 
Event polar          :  p( Distance, Angle  )   //emitted by the plant (on Raspberry)
Dispatch polarMsg    :  p( Distance, Angle  )   //forwarded by the tester      
 
Context  ctxRadarBase    ip [ host="localhost"  port=8033 ]   

QActor radarguibase context ctxRadarBase -g cyan {     
 Plan init normal [            
        println("RADAR init the GUI ... ") ;     
        actorOp activateGui        
    ]
switchTo waitSonarInfo     
Plan waitSonarInfo [  ] 
       transition stopAfter 10000 
         whenEvent polar   -> handleSonarInfo ,
         whenMsg  polarMsg -> handleSonarInfo 
       finally repeatPlan  
Plan handleSonarInfo resumeLastPlan [
	onMsg  polarMsg : p(D,A) -> actorOp sendDataToGui( D,A )  ;
    onEvent polar   : p(D,A) -> actorOp sendDataToGui( D,A )
 ] 
}

QActor qatester  context ctxRadarBase -gyellow {	 
Rules{

	p(80,0). 
	p(80,30).
	p(30,50).
	p(80,60).
	p(20,70).
	p(80,90).
	p(80,120).
	p(10,130).
	p(80,150).
	p(80,180).
	  
} 
	Plan init normal [       
  		delay  1000 ; 
  		println("generate") ;
   		[ !? p(X,Y) ] forward radarguibase -m polarMsg : p(X,Y) else endPlan "testDone" ;
	  	[ ?? p(X,Y) ] emit polar : p(X,Y) else endPlan "testDone"
 	]
 	finally repeatPlan
}
