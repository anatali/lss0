System mbotControl
Event usercmd     : usercmd(CMD)
Event sonar  	  : sonar(SONAR, TARGET, DISTANCE)	//From (virtual) sonar
Event sonarDetect : sonarDetect(X)					//From (virtual robot) sonar
Event realSonar   : sonar( DISTANCE )				//From real sonar on real robot

Context ctxMbotControl ip [ host="localhost"  port=8029 ] -httpserver  

QActor rover context ctxMbotControl { 
	Plan init normal [    
	    	println("rover START");	    	
 	    	connectUnity "192.168.43.229";
 	    	createUnityObject "rover" ofclass "Prefabs/CustomActor" ;
	    	//javaOp "it.unibo.rover.MbotConnArduino.initPc(this)" ;
     		javaOp "it.unibo.rover.MbotConnArduino.initRasp(this)" ;
  			backwards 70 time ( 800 ) ;    	
   	    	right 70 time ( 1000 )   //position
  	    ] 
	    switchTo waitUserCmd     
		
   	Plan waitUserCmd[
  	]  
  	transition stopAfter 600000    
 		whenEvent usercmd -> execMove
  	finally repeatPlan 

  	Plan execMove resumeLastPlan[   
  		//printCurrentEvent;
    	onEvent usercmd :  usercmd( robotgui(w(X)) ) -> switchTo moveForward;    
    	onEvent usercmd :  usercmd( robotgui(s(X)) ) -> switchTo moveBackward;  
  		onEvent usercmd :  usercmd( robotgui(a(X)) ) -> switchTo turnLeft;   
   		onEvent usercmd :  usercmd( robotgui(d(X)) ) -> switchTo turnRight ;   
   		onEvent usercmd :  usercmd( robotgui(h(X)) ) -> switchTo stopTheRobot ;
   		onEvent usercmd :  usercmd( robotgui(f(X)) ) -> javaOp "it.unibo.rover.MbotConnArduino.mbotLinefollow()" ;
   		onEvent usercmd :  usercmd( robotgui(x(X)) ) -> switchTo terminataAppl
   	]
  	
  	Plan moveForward resumeLastPlan[ 
  		javaOp "it.unibo.rover.MbotConnArduino.mbotForward()"
  	]
  	reactive onward 40 time( 15000 )  
		whenEnd               -> endOfMove
		whenTout 30000        -> handleTout
		whenEvent sonarDetect -> handleRobotSonarDetect
		or whenEvent sonar    -> handleSonar
		or whenEvent usercmd  -> execMove
  	
  	Plan moveBackward resumeLastPlan[ 
  		javaOp "it.unibo.rover.MbotConnArduino.mbotBackward()"
  	]  
  	reactive backwards 40 time ( 15000 )
		whenEnd               -> endOfMove
		whenTout 30000        -> handleTout
//		whenEvent sonarDetect -> handleObstacle  //no sensor on robot back
		whenEvent sonar       -> handleSonar
		or whenEvent usercmd  -> execMove
	Plan turnLeft resumeLastPlan [
		javaOp "it.unibo.rover.MbotConnArduino.mbotLeft()";
		left 40 time(750);
		//delay 150 ;
		javaOp "it.unibo.rover.MbotConnArduino.mbotStop()"		
	]
	Plan turnRight resumeLastPlan [
		javaOp "it.unibo.rover.MbotConnArduino.mbotRight()";
		right 40 time(750) ;
		//delay 150 ;
		javaOp "it.unibo.rover.MbotConnArduino.mbotStop()"
	]
	Plan stopTheRobot resumeLastPlan[
		stop 40 time ( 10 );
		javaOp "it.unibo.rover.MbotConnArduino.mbotStop()"
	]
	
	Plan terminataAppl resumeLastPlan [
		stop 40 time ( 10 );
		javaOp "it.unibo.rover.MbotConnArduino.mbotStop()";
		actorOp terminateSystem
	]
	
	Plan handleRobotSonarDetect  resumeLastPlan [
		//printCurrentEvent;
 		javaOp "it.unibo.rover.MbotConnArduino.mbotStop()";
		stop 40 time ( 100 )     //stop for a while ...
	]
	Plan handleSonar  resumeLastPlan [  
		//printCurrentEvent;
		javaOp "it.unibo.rover.MbotConnArduino.mbotStop()";
		onward 40 time ( 500 ) ; //out of sonar range 
		stop 40 time ( 100 )     //stop for a while ...  
	]
	Plan endOfMove resumeLastPlan [ println("endOfMove") ]
	
	Plan handleEndOfMove resumeLastPlan [ println("handleEndOfMove") ]
	Plan handleTout [ println("handleTout") ]
  	    
}  

QActor sonardetector context ctxMbotControl{
	Plan init normal [ ]
  	transition stopAfter 600000    
 		whenEvent sonar :  sonar(SONAR, TARGET, DISTANCE ) do printCurrentEvent,
 		whenEvent sonarDetect : sonarDetect(X) do printCurrentEvent ,
 		whenEvent realSonar : sonar( DISTANCE ) do printCurrentEvent
  	finally repeatPlan 

}