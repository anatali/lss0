/*
 * This is A MODEL, result of problem analysis 
 * written in the CUSTOM meta-model/language qa
 */  
System blsHlBlinkReactiveWeb 
Event cmd     : cmd(V)			//V : start/stop
Event alarm   : alarm(V)		//V : fire 

Context ctxBlsHlBlimkreactiveWeb ip [ host="localhost"  port=8029 ]  -httpserver   
 
QActor qaledhlreactiveweb context ctxBlsHlBlimkreactiveWeb   {
Rules{
//  	config( led,  gui ). 
   		config( led,  rasp ). 
}
	Plan init normal  [         
    	[ !? config( led, X )] actorOp createLedObject( X )  
    ]
   	switchTo waitForCmd   
   	  
  	Plan waitForCmd [  
  		println("qaledhlreactiveweb WAITS")
  	]
    transition stopAfter 3000000
     	whenEvent cmd : cmd(start) do switchTo doLedBlink
    finally repeatPlan	
     
    Plan doLedBlink[
   		println("qaledhlreactiveweb doLedBlink") ;
    	actorOp setupLedBlink
    ]
    reactive actorOp ledBlink
   		whenEnd           -> endWork
   		whenTout 30000    -> endWork    		
   		whenEvent alarm   -> stopBlink 
   	    
    Plan stopBlink[
    	println("qaledhlreactiveweb stopBlink") ;
      	actorOp ledblinkstop 
    ]   
    switchTo waitForCmd
   	
   	Plan endWork[ 
   		println("qaledhlreactive ends") ;
   		delay 3000
   	]
}

 
     
