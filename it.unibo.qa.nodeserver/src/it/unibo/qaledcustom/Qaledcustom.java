/* Generated by AN DISI Unibo */ 
/*
This code is generated only ONCE
*/
package it.unibo.qaledcustom;
import alice.tuprolog.SolveInfo;
import it.unibo.baseEnv.basicFrame.EnvFrame;
import it.unibo.bls.highLevel.interfaces.IDevLed.LedColor;
import it.unibo.bls.lowLevel.interfaces.ILed;
import it.unibo.buttonLed.components.LedMock;
import it.unibo.custom.gui.CustomBlsGui;
import it.unibo.is.interfaces.IOutputEnvView;
import it.unibo.qactors.QActorContext;

public class Qaledcustom extends AbstractQaledcustom { 
	public Qaledcustom(String actorId, QActorContext myCtx, IOutputEnvView outEnvView )  throws Exception{
		super(actorId, myCtx, outEnvView);
	}
/*
 * ADDED BY THE APPLICATION DESIGNER	
 */
	private CustomBlsGui gui;
	private ILed led = new LedMock("led1", LedColor.RED);
	
	public void  createCustomLedObject(String devType){
		if(  devType.equals("gui")) gui=CustomBlsGui.createCustomLedGui(this);
		println("createCustomLedObject state= " + led.isOn() );
		ledSwitch();
		ledSwitch();	//just to set memoLedState with led finally off
 	}
  	public void ledSwitch(){
//		println("ledSwitch " + led.isOn() );
		led.doSwitch();
		gui.setLedGui( led.isOn() );
		memoLedState( led.isOn() );		
//		println("AFTER ledSwitch=" + led.isOn() );
	}
 
 	public void memoLedState(boolean ledState){
		String goal = "assign(ledState,"+ledState+")";
//		System.out.println("memoLedState " + goal );
		SolveInfo sol = solveGoal( goal );	
	}	
  	
  	/*
  	 * EXCLUDE built-in panels
   	 */
    //@Override  EXCLUDE Override since these methods do not exist in env==null
	protected void addInputPanel(int size){ 	}
    //@Override
	protected void addCmdPanels(){ 	}

}
